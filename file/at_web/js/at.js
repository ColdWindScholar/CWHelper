function switchTab(tabId) {document.querySelectorAll('.tab-content').forEach(content => {content.classList.remove('active')});document.querySelectorAll('.tab').forEach(tab => {tab.classList.remove('active')});document.getElementById(tabId).classList.add('active');event.currentTarget.classList.add('active')}function at_cmd_ex() {const cmd = at_cmd.value.trim();if (!/^at/i.test(cmd)) {const timestamp = new Date().toLocaleTimeString();at_result.value = `[${timestamp}]错误:命令必须以AT开头\n${at_result.value}`;return}const xhr = new XMLHttpRequest();const displayCmd = cmd.substring(2);const timestamp = new Date().toLocaleTimeString();const url = `/goform/goform_set_cmd_process?goformId=${encodeURIComponent(goformId.value)}&at_cmd=${encodeURIComponent(cmd)}`;xhr.open("GET", url, true);xhr.onload = function() {let resultText = '';const response = xhr.responseText.trim();if (xhr.status === 200) {resultText = `[${timestamp}]${displayCmd}:\n${response}\n\n`} else {resultText = `[${timestamp}]${displayCmd}:\n错误(状态码:${xhr.status})\n\n`}at_result.value = resultText + at_result.value};xhr.onerror = function() {const errorText = `[${timestamp}]${displayCmd}:\n网络错误\n\n`;at_result.value = errorText + at_result.value};xhr.send()}function getResideBand() {var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_set_cmd_process?goformId=EXECUTE_AT_COMMAND&at_cmd=AT%2BZBAND%3F", true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4 && xhr.status == 200) {try {var response = xhr.responseText.trim();var bands = response.split(',');if (bands.length >= 2) {if (bands[0] === "3") {var bandNumber = bands[1];if (bandNumber === "255") {document.getElementById("current_reside_band").textContent = "无有效驻留频段"} else {document.getElementById("current_reside_band").textContent = "B" + bandNumber}} else {document.getElementById("current_reside_band").textContent = "非LTE模式 (" + bands[0] + ")"}} else {document.getElementById("current_reside_band").textContent = "获取失败: " + response}} catch (e) {console.error("解析驻留频段失败:", e);document.getElementById("current_reside_band").textContent = "获取失败"}}}}function getBandInfo() {var xhr1 = new XMLHttpRequest();xhr1.open("GET", "/goform/goform_get_cmd_process?cmd=GET_SUPPORT_BAND", true);xhr1.onreadystatechange = function() {if (xhr1.readyState == 4 && xhr1.status == 200) {try {var supportBands = JSON.parse(xhr1.responseText).LTEBAND.split(',');var xhr2 = new XMLHttpRequest();xhr2.open("GET", "/goform/goform_get_cmd_process?cmd=GET_LOCK_BAND", true);xhr2.onreadystatechange = function() {if (xhr2.readyState == 4 && xhr2.status == 200) {try {var lockedBands = JSON.parse(xhr2.responseText).LTEBAND.split(',');updateBandSelection(supportBands, lockedBands)} catch (e) {console.error("解析锁定频段失败:", e);document.getElementById("current_lock_band").textContent = "获取失败"}}};xhr2.send()} catch (e) {console.error("解析支持频段失败:", e);document.getElementById("current_lock_band").textContent = "获取失败"}}};xhr1.send()}function updateBandSelection(supportBands, lockedBands) {var bandSelection = document.getElementById("band_selection");var currentLockBand = document.getElementById("current_lock_band");currentLockBand.textContent = lockedBands.join(', ') || "未锁定";bandSelection.innerHTML = '<div class="band-container"></div>';var container = bandSelection.querySelector('.band-container');supportBands.forEach(function(band) {var checkboxId = 'band_' + band;var isChecked = lockedBands.includes(band);var checkbox = document.createElement('input');checkbox.type = 'checkbox';checkbox.id = checkboxId;checkbox.className = 'band-checkbox';checkbox.value = band;checkbox.checked = isChecked;var label = document.createElement('label');label.htmlFor = checkboxId;label.className = 'band-label';label.textContent = band;container.appendChild(checkbox);container.appendChild(label)})}function lockSelectedBands() {var selectedBands = [];document.querySelectorAll('.band-checkbox:checked').forEach(function(checkbox) {selectedBands.push(checkbox.value)});if (selectedBands.length === 0) {showOverlay("请至少选择一个频段", false);return}var bandList = selectedBands.join(',');var encodedBandList = encodeURIComponent(bandList);var xhr = new XMLHttpRequest();xhr.open("GET", `/goform/goform_set_cmd_process?goformId=SET_LOCK_BAND&band_list=${encodedBandList}`, true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4) {if (xhr.status == 200) {try {var response = JSON.parse(xhr.responseText);if (response.result && response.result.includes("success")) {showOverlay("频段锁定成功", true);getBandInfo()} else {showOverlay("频段锁定失败", false)}} catch (e) {console.error("解析响应失败:", e);showOverlay("频段锁定失败", false)}} else {showOverlay("网络错误", false)}}}}function getCellLockInfo() {var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_get_cmd_process?cmd=GET_LOCK_CELL", true);xhr.onreadystatechange = function() {if (xhr.readyState == 4 && xhr.status == 200) {try {var response = JSON.parse(xhr.responseText);document.getElementById("current_band").textContent = response.band ? "B" + response.band : "--";document.getElementById("current_arfcn").textContent = (response.arfcn || "--");document.getElementById("current_pci").textContent = (response.pci || "--");var lockState = response.CellLockState;document.getElementById("cell_lock_state").textContent = lockState === "1" ? "已锁定" : (lockState === "0" ? "未锁定" : "--");var lockedParts = response.CellLockSet ? response.CellLockSet.split(',') : ["", ""];if (lockedParts[1] == "65535") {lockedParts[1] = "--"}document.getElementById("locked_arfcn").textContent = lockedParts[0] || "--";document.getElementById("locked_pci").textContent = lockedParts[1] || "--"} catch (e) {console.error("解析小区锁定信息失败:", e);showOverlay("获取小区锁定信息失败", false)}}};xhr.send()}function setCellLock() {var arfcn = document.getElementById("lock_arfcn").value.trim();var pci = document.getElementById("lock_pci").value.trim();var enable = document.getElementById("lock_enable").value;if (enable === "1" && !/^\d{1,}$/.test(arfcn)) {showOverlay("锁定操作需要输入频点，小区ID可选", false);return}if (enable === "1" && pci && !/^\d{1,3}$/.test(pci)) {showOverlay("请输入正确小区ID", false);return}var url = `/goform/goform_set_cmd_process?goformId=SET_LOCK_CELL&lc=${enable}&arfcn=${encodeURIComponent(arfcn)}&pci=${encodeURIComponent(pci)}`;var xhr = new XMLHttpRequest();xhr.open("GET", url, true);xhr.onreadystatechange = function() {if (xhr.readyState == 4) {if (xhr.status == 200) {try {var response = xhr.responseText;if (response.includes("success")) {showOverlay("小区锁定设置成功", true);getCellLockInfo()} else {showOverlay("小区锁定设置失败", false)}} catch (e) {console.error("解析响应失败:", e);showOverlay("小区锁定设置失败", false)}} else {showOverlay("网络错误", false)}}};xhr.send()}function getCurrentImei() {var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_get_cmd_process?cmd=imei", true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4 && xhr.status == 200) {try {var response = JSON.parse(xhr.responseText);if (response.imei) {document.getElementById("current_imei").textContent = response.imei}} catch (e) {console.error("解析IMEI信息失败:", e);document.getElementById("current_imei").textContent = "获取失败"}}}}function changeImei(imei) {if (!/^\d{15}$/.test(imei)) {showOverlay("IMEI必须是15位数字", false);return}var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_set_cmd_process?goformId=SET_IMEI_NUM&imei=" + imei, true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4) {if (xhr.status == 200) {try {var response = JSON.parse(xhr.responseText);showOverlay(response.result == "success" ? "IMEI修改成功，请重启设备" : "IMEI修改失败", response.result == "success")} catch (e) {console.error("解析响应失败:", e);showOverlay("IMEI修改失败", false)}} else {showOverlay("网络错误", false)}}}}function rebootDevice() {const currentHost = window.location.hostname;const rebootUrl = `//${currentHost}/reqproc/proc_post?goformId=REBOOT_DEVICE`;fetch(rebootUrl, { method: 'GET' });alert('重启指令已发送');}function getDebugStatus() {var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_set_cmd_process?goformId=EXECUTE_AT_COMMAND&at_cmd=AT%2BZMODE%3F", true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4 && xhr.status == 200) {try {var response = xhr.responseText;var statusElement = document.getElementById("debug_status");if (response == "1") {statusElement.textContent = "已开启";statusElement.className = "span8 debug-status status-on"} else {statusElement.textContent = "已关闭";statusElement.className = "span8 debug-status status-off"}} catch (e) {console.error("解析调试状态失败:", e);document.getElementById("debug_status").textContent = "获取失败"}}}}function setDebugMode(enable) {var xhr = new XMLHttpRequest();xhr.open("GET", "/goform/goform_set_cmd_process?goformId=SET_DEVICE_MODE&debug_enable=" + enable, true);xhr.send();xhr.onreadystatechange = function() {if (xhr.readyState == 4) {showOverlay("设置成功，设备自动重启！", true)}}}function showOverlay(message, isSuccess) {const overlay = document.createElement('div');overlay.className = 'overlay';const content = document.createElement('div');content.className = `overlay-content ${isSuccess?'overlay-success':'overlay-error'}`;content.textContent = message;overlay.appendChild(content);document.body.appendChild(overlay);setTimeout(() => {overlay.remove()}, 3000)}document.addEventListener('DOMContentLoaded', function() {document.getElementById('clear-result').addEventListener('click', function(e) {e.preventDefault();document.getElementById('at_result').value = ''});document.getElementById('imei').addEventListener('input', function(e) {this.value = this.value.replace(/\D/g, '').slice(0, 15)});getCurrentImei();setInterval(getCurrentImei, 15000);getResideBand();setInterval(getResideBand, 10000);getCellLockInfo();setInterval(getCellLockInfo, 10000);var ipElement = document.getElementById('current-ip');if (ipElement) {ipElement.textContent = window.location.hostname}});const observer = new MutationObserver((mutations) => {mutations.forEach((mutation) => {mutation.addedNodes.forEach((node) => {if (node.nodeType === Node.ELEMENT_NODE) {if (node.matches && node.matches('div[style*="text-align: center"]')) {if (node.textContent.includes('mWiFi.icu')) {node.remove();return}}const targetDiv = node.querySelector('div[style*="text-align: center"]');if (targetDiv && targetDiv.textContent.includes('mWiFi.icu')) {targetDiv.remove()}}})})});observer.observe(document.documentElement, {childList: true,subtree: true,});